name: Build Android

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day
  workflow_dispatch:  # Allows manual triggering

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        arch: [ "arm32", "aarch64" ]
      fail-fast: false

    name: "Build for ${{matrix.arch}}"

    runs-on: ubuntu-latest

    steps:
        
      - uses: actions/checkout@v4

      - name: Build
        run: |
          sudo apt update
          sudo apt install -y meson libxrandr-dev libxxf86vm-dev libxcb-*-dev libx11-xcb-dev libxfixes-dev libdrm-dev libx11-dev glslang-tools
          pip3 install mako
          
          # Setup Android NDK
          wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
          unzip android-ndk-r27c-linux.zip
          export ANDROID_NDK_HOME=$PWD/android-ndk-r27c
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          
          # Clone Mesa repository
          git clone --depth 1 https://gitlab.freedesktop.org/mesa/mesa.git
          cd mesa
          
          # Fix blake3 implementation with sed
          # Add declarations to blake3_impl.h
          sed -i '1i\#include <stdint.h>' src/util/blake3/blake3_impl.h
          sed -i '/^#if BLAKE3_USE_NEON == 1/a void blake3_hash_many_neon(const uint8_t *const *inputs, size_t num_inputs, size_t blocks, const uint32_t key[8], uint64_t counter, bool increment_counter, uint8_t flags, uint8_t flags_start, uint8_t flags_end, uint8_t *out);' src/util/blake3/blake3_impl.h
          
          # Replace the NEON implementation with a pointer to the portable implementation
          sed -i '/^#if BLAKE3_USE_NEON == 1/,/^#endif/c\#if BLAKE3_USE_NEON == 1\ntypedef void (*blake3_hash_many_fn)(const uint8_t *const *inputs, size_t num_inputs, size_t blocks, const uint32_t key[8], uint64_t counter, bool increment_counter, uint8_t flags, uint8_t flags_start, uint8_t flags_end, uint8_t *out);\nstatic const blake3_hash_many_fn blake3_hash_many_neon = blake3_hash_many_portable;\n#endif' src/util/blake3/blake3_dispatch.c
          
          # Add missing include to panvk_android.c
          sed -i '/#include <stdlib.h>/a #include <string.h>' src/panfrost/vulkan/panvk_android.c
          
          # Rest of the build process
          envsubst <$GITHUB_WORKSPACE/android-drm-${{matrix.arch}} >build-crossfile-drm
          git clone --depth 1 https://gitlab.freedesktop.org/mesa/drm.git
          cd drm
          meson setup "build-android" \
            --prefix=/tmp/drm-static \
            --cross-file "../build-crossfile-drm" \
            -Ddefault_library=static \
            -Dintel=disabled \
            -Dradeon=disabled \
            -Damdgpu=disabled \
            -Dnouveau=disabled \
            -Dvmwgfx=disabled \
            -Dfreedreno=disabled \
            -Dvc4=disabled \
            -Detnaviv=disabled
          ninja -C "build-android" install
          cd ..
          envsubst <$GITHUB_WORKSPACE/android-${{matrix.arch}} >build-crossfile
          meson setup "build-android" \
            --prefix=/tmp/pan \
            --cross-file "build-crossfile" \
            -Dplatforms=android \
            -Dplatform-sdk-version=34 \
            -Dandroid-stub=true \
            -Dllvm=disabled \
            -Dxlib-lease=disabled \
            -Degl=auto \
            -Dgbm=auto \
            -Dglx=disabled \
            -Dopengl=true \
            -Dgles1=enabled \
            -Dgles2=enabled \
            -Dglvnd=disabled \
            -Dosmesa=true \
            -Dvulkan-drivers=panfrost,virtio \
            -Dgallium-drivers=softpipe,virgl,panfrost \
            -Dshared-glapi=enabled \
            -Dgles-lib-suffix=_mesa
          ninja -C "build-android" install
      - name: Upload libraries
        uses: actions/upload-artifact@v4
        with:
          name: panfrost_${{matrix.arch}}
          path: /tmp/pan

      - name: Package libraries
        run: |
          cd /tmp/pan
          tar czf panfrost_${{matrix.arch}}.tar.gz *
          cd $GITHUB_WORKSPACE
          mv /tmp/pan/panfrost_${{matrix.arch}}.tar.gz .

      - name: Create Release
        if: matrix.arch == 'aarch64'
        uses: softprops/action-gh-release@v1
        with:
          name: Build ${{ github.run_number }}
          tag_name: build_${{ github.run_number }}
          draft: false
          prerelease: true
          files: |
            panfrost_aarch64.tar.gz

      - name: Wait for arm32 build
        if: matrix.arch == 'aarch64'
        run: sleep 30

      - name: Download arm32 artifact and upload to release
        if: matrix.arch == 'aarch64'
        run: |
          # Download arm32 artifact
          mkdir -p /tmp/arm32
          gh run download --name panfrost_arm32 --dir /tmp/arm32
          cd /tmp/arm32
          tar czf panfrost_arm32.tar.gz *
          mv panfrost_arm32.tar.gz $GITHUB_WORKSPACE/
          cd $GITHUB_WORKSPACE
          # Upload to existing release
          gh release upload build_${{ github.run_number }} panfrost_arm32.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
